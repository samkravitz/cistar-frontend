{"version":3,"sources":["Header.js","Reactant.js","Product.js","Properties.js","Diluent.js","Body.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeR","event","numReactants","parseInt","target","value","setState","props","changeNumReactants","handleChangeP","numProducts","changeNumProducts","handleChangeD","numDiluents","changeNumDiluents","state","react_default","a","createElement","className","style","styles","main","flexTop","paddingBottom","paddingLeft","titleLocation","paddingRight","Input","type","name","id","operatingParams","paddingTop","rpd","element","Label","for","onChange","color","Component","backgroundColor","marginBottom","padding","display","justifyContent","flexBottom","alignItems","width","Reactant","handleChange","e","files","console","log","formData","FormData","append","axios","get","then","res","post","body","json","data","catch","err","getBackgroundColor","number","objectSpread2","sm","gridTemplateRows","textAlign","Product","margin","Properties","alignment","numberOfElements","alignSelf","Diluent","Body","getNumberOfElements","reactants","products","diluents","getReactants","i","push","src_Reactant","key","getProducts","src_Product","getDiluents","src_Diluent","prevProps","prevState","_this$props","_this$props2","src_Properties","height","Main","src_Header","src_Body","App","isOpen","n_r","n_p","fr1","r1","replace","_this2","fetch","response","src_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36b2a0cf.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport {\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Label,\n    Input,\n    Jumbotron\n} from 'reactstrap';\n\n\nclass Header extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            numReactants: 1,\n            numProducts: 1,\n            numDiluents: 0\n        }\n    }\n\n    handleChangeR = event => {\n        const numReactants = parseInt(event.target.value, 10)\n        this.setState({ numReactants })\n        this.props.changeNumReactants(numReactants)\n    }\n\n    handleChangeP = event => {\n        const numProducts = parseInt(event.target.value)\n        this.setState({ numProducts })\n        this.props.changeNumProducts(numProducts)\n    }\n\n    handleChangeD = event => {\n        const numDiluents = parseInt(event.target.value)\n        this.setState({ numDiluents })\n        this.props.changeNumDiluents(numDiluents)\n    }\n\n    render() {\n        return (\n            <div className=\"Header\" style={styles.main}>\n                <div className=\"HeaderFlex\" style={styles.flexTop}>\n                    <div className=\"TopWrapper\">\n                        <h1 style={{ paddingBottom: '.5em' }}>CISTAR Web Tool</h1>\n                        <div className=\"TitleLocation\" style={{ paddingLeft: '1em' }}>\n                            <div className=\"Title\" style={styles.titleLocation}>\n                                <h6 style={{ paddingRight: '1em' }}>Title: </h6>\n                                <Input type=\"text\" name=\"title\" id=\"title\" />\n                            </div>\n                            <div className=\"Location\" style={styles.titleLocation}>\n                                <h6 style={{ paddingRight: '1em' }} >Location: </h6>\n                                <Input type=\"text\" name=\"title\" id=\"title\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"OperatingParams\">\n                        <h4>Operating Parameters: </h4>\n                        <div className=\"Params\" style={styles.operatingParams}>\n                            <h6>Temperature (&deg;C)</h6>\n                            <Input type=\"text\" name=\"Temperature\" id=\"Temperature\" />\n                            <h6 style={{ paddingTop: '1em' }}>Pressure (bar)</h6>\n                            <Input type=\"text\" name=\"Pressure\" id=\"Pressure\" />\n                            <h6 style={{ paddingTop: '1em' }}>State</h6>\n                            <Input type=\"select\" name=\"st\" id=\"exampleSelect\" >\n                                <option>Liquid</option>\n                                <option>Gas</option>\n                            </Input>\n                            <h6 style={{ paddingTop: '1em' }}>Heat of Reaction</h6>\n                            <Input type=\"text\" name=\"HeatOfReaction\" id=\"HeatOfReaction\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ReactantsProductsDiluents\" style={styles.rpd}>\n                    <span style={styles.rpd.element}>\n                        <Label for=\"Reactants\">Reactants</Label>\n                        <Input type=\"select\" name=\"Reactants\" id=\"Reactants\" value={this.state.numReactants} onChange={this.handleChangeR}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Input>\n                    </span>\n                    \n                    <span style={styles.rpd.element}>\n                        <Label for=\"Products\">Products</Label>\n                        <Input type=\"select\" name=\"Products\" id=\"Products\" value={this.state.numProducts} onChange={this.handleChangeP}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Input>\n                    </span>\n                        \n                    <span style={styles.rpd.element}>\n                        <Label for=\"Diluents\">Diluents</Label>\n                        <Input type=\"select\" name=\"Diluents\" id=\"Diluents\" value={this.state.numDiluents} onChange={this.handleChangeD}>\n                            <option>0</option>\n                            <option>1</option>\n                            <option>2</option>\n                        </Input>\n                    </span>\n                </div>\n                <span style={{ color: '#c71e1e' }}>* Inputs in red are required user inputs *</span>\n            </div >\n            \n        )\n    }\n}\n\nconst styles = {\n    main: {\n        backgroundColor: '#f1f1f1',\n        marginBottom: '2em',\n        padding: '1em 3em',\n    },\n\n    flexTop: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n\n    flexBottom: {\n\n    },\n\n    titleLocation: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: '1em'\n    },\n\n    operatingParams: {\n        color: '#c71e1e',\n        padding: '1em'\n    },\n\n    rpd: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        element: {\n            width: '33%',\n            padding: '1em'\n        },\n    }\n    \n}\n\nexport default Header","import React, { Component } from 'react'\nimport {\n    FormGroup,\n    Input,\n    Jumbotron,\n    Button,\n    Container,\n    Row\n} from 'reactstrap'\nimport axios from 'axios'\n\nclass Reactant extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            \n        }\n    }\n\n    // when a file is uploaded\n    handleChange = e => {\n        const name = e.target.files[0].name\n        console.log('name is ', name)\n        console.log('http://localhost:5000/pdf/' + name)\n        const formData = new FormData()\n        formData.append(\"file\", e.target.files[0])\n        formData.append('fileName', name)\n        console.log(formData)\n        axios.get('http://localhost:5000/').then(res => console.log(res))\n        axios.post('http://localhost:5000/pdf', {\n            body: formData\n        })\n            .then(res => res.json())\n            .then(data => console.log(data))\n            .catch(err => console.log(err))\n    }\n\n    getBackgroundColor = number => {\n        return number % 2 === 0 ? '' : '#f1f1f1'\n    }\n\n    render() {\n        const { number } = this.props\n        const backgroundColor = this.getBackgroundColor(number)\n        return (\n            <div className=\"Reactant\" style={{ ...styles }}>\n                <h4 sm=\"4\">Reactant {number}</h4>\n                \n                <Input\n                    type=\"file\"\n                    name=\"file\"\n                    id=\"exampleFile\"\n                    onChange={this.handleChange}\n                />     \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <br/>\n    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />      \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />          \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />       \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                 \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(5, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    //gridTemplateRows: '100px 200px',\n    //gridTemplateRows: 'repeat(23, 1fr)',\n    textAlign: 'center',\n    alignItems: 'start',\n    //height: '100%',\n    backgroundColor: '#f1f1f1'\n}\n\nexport default Reactant","import React, { Component } from 'react'\n\nimport {\n    FormGroup,\n    Input,\n    Jumbotron,\n    Button,\n    Container,\n    Row\n} from 'reactstrap'\n\nclass Product extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            \n        }\n    }\n\n    getBackgroundColor = number => {\n        return number % 2 === 0 ? '' : '#f1f1f1'\n    }\n\n    render() {\n        const { number } = this.props\n        const backgroundColor = this.getBackgroundColor(number)\n        return (\n            <div className=\"Product\" style={{ ...styles }}>\n                <h4 sm=\"4\">Product {number}</h4>\n                \n                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />     \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <br/>\n    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />      \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />          \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />       \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                 \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(5, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    //gridTemplateRows: '100px 200px',\n    //gridTemplateRows: 'repeat(23, 1fr)',\n    textAlign: 'center',\n    alignItems: 'start',\n    //height: '100%',\n    backgroundColor: '#f1f1f1'\n}\n\nexport default Product","import React from 'react'\n\nconst getAlignment = numberOfElements => {\n    return numberOfElements > 6 ? 'start' : 'center'\n}\n\nconst Properties = props => {\n    const alignment = getAlignment(props.numberOfElements)\n    return (\n        <div className=\"Properties\" style={{ ...styles.main, alignItems: alignment }}>\n\n            <h2 style={{ alignSelf: 'end' }}>Property</h2>\n            <div></div>\n            <h6>Product Name</h6>\n            <h6 style={{ color: '#c71e1e' }}>Mol. Weight (g/mol)</h6>\n            <h6>CAS-No.</h6>\n\n            <h5>Physical and Chemical Properties</h5>\n            <h6>pH at 20°C (g/l)</h6>\n            <h6>Initial boiling point (°C)</h6>\n            <h6>Flash point (°C)</h6>\n            <h6>Upper explosion limit (% V)</h6>\n            <h6>Lower explosion limit (% V)</h6>\n            <h6>Vapour pressure at 20°C (hPa)</h6>\n            <h6>Vapour density (Air = 1.0)</h6>\n            <h6>Relative density at 25°C (g/cm3)</h6>\n            <h6>Auto ignition temperature (°C)</h6>\n            <h6>Decomposition temperature (°C)</h6>\n            <h6>Viscosity ()</h6>\n            <h6>Thermal Conductivity - K</h6>\n            <h6 style={{ color: '#c71e1e' }}>Specific heat capacity - Cp</h6>\n        </div>\n\n    )\n}\n\nconst styles = {\n    main: {\n        display: 'grid',\n        //gridTemplateRows: '100px 200px',\n        //gridTemplateRows: 'repeat(23, minmax(auto, 1fr))',\n        gridTemplateRows: 'repeat(5, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n        margin: '0',\n        //alignItems: 'center',\n        //alignItems: 'start',\n        textAlign: 'center',\n    },\n}\n\nexport default Properties","import React, { Component } from 'react'\n\nimport {\n    FormGroup,\n    Input,\n    Jumbotron,\n    Button,\n    Container,\n    Row\n} from 'reactstrap'\n\nclass Diluent extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        const { number } = this.props\n        return (\n            <div className=\"Diluent\" style={{ ...styles }}>\n                <h4 sm=\"4\">Diluent {number} </h4>\n                \n                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />     \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <br/>\n    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />      \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />   \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />          \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />       \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                    \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />                 \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />         \n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n                <Input type=\"text\" name=\"text\" id=\"exampleText\" />\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(5, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    //gridTemplateRows: '100px 200px',\n    //gridTemplateRows: 'repeat(23, 1fr)',\n    textAlign: 'center',\n    alignItems: 'start',\n    //height: '100%',\n    backgroundColor: '#f1f1f1'\n}\n\nexport default Diluent","import React, { Component } from 'react'\n\nimport Reactant from './Reactant'\nimport Product from './Product'\nimport Properties from './Properties'\nimport Diluent from './Diluent'\n\nclass Body extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            numberOfElements: props.numReactants + props.numProducts + props.numDiluents + 1\n        }\n    }\n\n    getNumberOfElements = (reactants, products, diluents) => {\n        // + 1 to account for products column\n        return reactants + products + diluents + 1\n    }\n\n    // update number of Reactants, Products, Diluents that will be rendered\n    componentDidUpdate(prevProps, prevState) {\n        const { numReactants, numProducts, numDiluents } = this.props\n        const numberOfElements = this.getNumberOfElements(numReactants, numProducts, numDiluents)\n        if (prevState.numberOfElements !== numberOfElements) {\n            this.setState({ numberOfElements })\n        }\n    }\n\n    getReactants = numReactants => {\n        const reactants = []\n        for (let i = 0; i < numReactants; i++) {\n            reactants.push(\n                <Reactant\n                    key={i}\n                    number={i + 1}\n                />\n            )\n        }\n        return reactants\n    }\n\n    getProducts = numProducts => {\n        const products = []\n        for (let i = 0; i < numProducts; i++) {\n            products.push(\n                <Product\n                    key={i}\n                    number={i + 1}\n                />\n            )\n        }\n        return products\n    }\n\n    getDiluents = numDiluents => {\n        const diluents = []\n        for (let i = 0; i < numDiluents; i++) {\n            diluents.push(\n                <Diluent\n                    key={i}\n                    number={i + 1}\n                />\n            )\n        }\n        return diluents\n    }\n\n    render() {\n        const { numReactants, numProducts, numDiluents } = this.props\n        const reactants = this.getReactants(numReactants)\n        const products = this.getProducts(numProducts)\n        const diluents = this.getDiluents(numDiluents)\n        return (\n            <div className=\"Body\" style={{ ...style }}>\n                <Properties numberOfElements={this.state.numberOfElements}/>\n                {reactants}\n                {products}\n                {diluents}\n            </div>\n        )\n    }\n}\n\nconst style = {\n    display: 'flex',\n    justifyContent: 'center',\n    height: '100%'\n}\n\nexport default Body","import React, { Component } from 'react'\n\nimport Header from './Header'\nimport Body from './Body'\n\n\nclass Main extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            numReactants: 1,\n            numProducts: 1,\n            numDiluents: 0,\n        }\n    }\n\n    changeNumReactants = numReactants => {\n        this.setState({ numReactants })\n    }\n\n    changeNumProducts = numProducts => {\n        this.setState({ numProducts })\n    }\n\n    changeNumDiluents = numDiluents => {\n        this.setState({ numDiluents })\n    }\n\n    render() {\n        return (\n            <div className=\"Main\">\n                <Header\n                    changeNumReactants={this.changeNumReactants}\n                    changeNumProducts={this.changeNumProducts}\n                    changeNumDiluents={this.changeNumDiluents}\n                />\n                <Body\n                    numReactants={this.state.numReactants}\n                    numProducts={this.state.numProducts}\n                    numDiluents={this.state.numDiluents}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Main","import React, { Component } from 'react';\nimport Main from './Main'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Row,\n    Col,\n    FormGroup,\n    Form,\n    Label,\n    Input,\n    FormText,\n    Jumbotron,\n    Button\n} from 'reactstrap'\n\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        //this.toggle = this.toggle.bind(this);\n        \n        //this.r2p2 = this.r2p2.bind(this);\n        //this.sr1 = this.sr1.bind(this);\n\n\n        this.state = {\n            isOpen: false,\n            n_r : 2,\n            n_p : 2,\n            fr1: '',\n            r1: ['','','']\n            \n        };\n        \n    }\nchangef(event) {\n  this.setState({fr1:event.target.value.replace(\"C:\\\\fakepath\\\\\", \"\")})\n  \n}\n\nsr1(event){\n\tconst url = \"http://localhost:5000/pdf/\";\n\tfetch(url + this.state.fr1).then(response => response.json()).then(data => this.setState({ r1: data.a }));\n}    \n\ntoggle() {\n   this.setState({\n      isOpen: !this.state.isOpen\n   });\n}\n    render() { \n        return (\n            <div className=\"App\">\n                <Main />\n            </div> \n        )\n    }\n\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}