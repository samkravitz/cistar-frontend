{"version":3,"sources":["server.js","redux/actions/types.js","redux/actions/Compound.js","redux/actions/OperatingParams.js","redux/actions/Report.js","redux/actions/index.js","header/Header.js","body/Reactant.js","body/Product.js","body/Properties.js","body/Diluent.js","body/Body.js","report/Matrix.js","report/HTable.js","report/Calculation.js","report/Report.js","Main.js","App.js","serviceWorker.js","redux/reducers/CompoundReducer.js","redux/reducers/OperatingParamsReducer.js","redux/reducers/ReportReducer.js","redux/reducers/index.js","index.js"],"names":["process","Types","SET_REACTANT","SET_PRODUCT","SET_DILUENT","SET_NUM_REACTANTS","SET_NUM_PRODUCTS","SET_NUM_DILUENTS","SET_TEMPERATURE","SET_PRESSURE","SET_PHYSICAL_STATE","SET_HEAT_OF_REACTION","SET_CP","SET_HNUMS","SET_MATRIX","SET_REACTION_INFO","setNumReactants","numReactants","dispatch","type","payload","setNumProducts","numProducts","setNumDiluents","numDiluents","parseReactantFile","index","temperature","formData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","message","wrap","_context","prev","next","axios","post","concat","server","headers","Content-Type","params","sent","data","t0","error","alert","stop","_x","apply","this","arguments","parseProductFile","_ref2","_callee2","_context2","_x2","parseDiluentFile","_ref3","_callee3","_context3","_x3","updateReactant","reactant","updateProduct","product","updateDiluent","diluent","setTemperature","setPressure","pressure","setPhysicalState","physicalState","setHeatOfReaction","heatOfReaction","setCp","cp","calculate","operatingParams","getState","_getState$compound","reactants","products","diluents","hNums","promises","matrix","compound","getHNums","keys","map","name","res","abrupt","Promise","all","forEach","productName","hNumbers","actions","report","styles","main","backgroundColor","marginBottom","padding","flexTop","display","justifyContent","flexBottom","titleLocation","alignItems","paddingBottom","color","rpd","element","width","mapDispatchToProps","connect","props","react_default","createElement","className","style","paddingLeft","paddingRight","Input","Button","onClick","defaultValue","onChange","event","target","value","paddingTop","id","Label","for","parseInt","gridTemplateRows","textAlign","state","handleChange","e","properties","objectSpread2","number","sm","encType","files","FormData","set","molWtFraction","molWt","casNo","ph","boilingPt","flashPt","upperExplosionLim","lowerExplosionLim","vapourPressure","vapourDensity","relDensity","autoIgnitionTemp","decompositionTemp","viscosity","margin","alignment","alignSelf","validateOperatingParams","Error","isNaN","Number","validateReactants","fractions","i","push","reduce","b","body_Properties","toConsumableArray","Array","body_Reactant","key","body_Product","body_Diluent","table","borderSpacing","border","align","th","borderBottom","borderRight","lineHeight","td","caption","captionSide","column","row","flammability","reactivity","skinAbsorption","skinContact","eyeContact","respiratory","carcinogen","reproductiveHazard","sensitizer","other","ingestion","borderCollapse","flexDirection","hNum","j","values","reactionInfo","adiabaticTemp","toFixed","finalTemp","adiabaticPressure","length","report_Calculation","report_HTable","report_Matrix","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setHNums","setState","console","log","header_Header","body_Body","report_Report","Component","App","src_Main","Boolean","window","location","hostname","match","initialState","CompoundReducer","undefined","action","produce","draft","diff","pop","OperatingParamsReducer","ReportReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ae4d9ca.chunk.js","sourcesContent":["const dev = 'http://localhost:5000'\nconst prod = 'https://cistar-backend.herokuapp.com'\n\nexport default process.env.NODE_ENV === 'development' ? dev : prod","const Types = {\n    // compound types\n    SET_REACTANT:         'SET_REACTANT',\n    SET_PRODUCT:          'SET_PRODUCT',\n    SET_DILUENT:          'SET_DILUENT',\n\n    SET_NUM_REACTANTS:    'SET_NUM_REACTANTS',\n    SET_NUM_PRODUCTS:     'SET_NUM_PRODUCTS',\n    SET_NUM_DILUENTS:     'SET_NUM_DILUENTS',\n\n    // operating param types\n    SET_TEMPERATURE:      'SET_TEMPERATURE',    \n    SET_PRESSURE:         'SET_PRESSURE',\n    SET_PHYSICAL_STATE:   'SET_PHYSICAL_STATE',\n    SET_HEAT_OF_REACTION: 'SET_HEAT_OF_REACTION',\n    SET_CP:               'SET_CP',\n\n    // report types\n    SET_HNUMS:            'SET_HNUMS',\n    SET_MATRIX:           'SET_MATRIX',\n    SET_REACTION_INFO:    'SET_REACTION_INFO',\n\n}\n\nexport default Types","import axios from 'axios'\nimport server from '../../server'\nimport Types from './types'\n\nexport const setNumReactants = numReactants => {\n    return dispatch => {\n        dispatch({ type: Types.SET_NUM_REACTANTS, payload: numReactants })\n    }\n}\n\nexport const setNumProducts = numProducts => {\n    return dispatch => {\n        dispatch({ type: Types.SET_NUM_PRODUCTS, payload: numProducts })\n    }\n}\n\nexport const setNumDiluents = numDiluents => {\n    return dispatch => {\n        dispatch({ type: Types.SET_NUM_DILUENTS, payload: numDiluents })\n    }\n}\n\nexport const parseReactantFile = (index, temperature, formData) => {\n    return async dispatch => {\n        try {\n            const response = await axios.post(`${server}/pdf`, formData, {\n                headers: { 'Content-Type': 'multipart/form-data' },\n                params: { temperature: temperature }\n            })\n    \n            dispatch({ type: Types.SET_REACTANT, payload: { index: index, data: response.data } })\n        } catch (error) {\n            // Error 😨\n            const message = error.response ? error.response.data.error : error\n            dispatch({ type: Types.SET_REACTANT, payload: { index: index, data: {} } })\n            alert(message)\n        }\n    }\n}\n\nexport const parseProductFile = (index, formData) => {\n    return async dispatch => {\n        try {\n            const response = await axios.post(`${server}/pdf`, formData, {\n                headers: { 'Content-Type': 'multipart/form-data' },\n            })\n    \n            dispatch({ type: Types.SET_PRODUCT, payload: { index: index, data: response.data } })\n        } catch (error) {\n            // Error 😨\n            const message = error.response ? error.response.data.error : error\n            dispatch({ type: Types.SET_PRODUCT, payload: { index: index, data: {} } })\n            alert(message)\n        }\n    }\n}\n\nexport const parseDiluentFile = (index, formData) => {\n    return async dispatch => {\n        try {\n            const response = await axios.post(`${server}/pdf`, formData, {\n                headers: { 'Content-Type': 'multipart/form-data' },\n            })\n    \n            dispatch({ type: Types.SET_DILUENT, payload: { index: index, data: response.data } })\n        } catch (error) {\n            // Error 😨\n            const message = error.response ? error.response.data.error : error\n            dispatch({ type: Types.SET_DILUENT, payload: { index: index, data: {} } })\n            alert(message)\n        }\n    }\n}\n\nexport const updateReactant = (index, reactant) => {\n    return dispatch => {\n        dispatch({ type: Types.SET_REACTANT, payload: { index: index, data: reactant } })\n    }\n}\n\nexport const updateProduct = (index, product) => {\n    return dispatch => {\n        dispatch({ type: Types.SET_PRODUCT, payload: { index: index, data: product } })\n    }\n}\n\nexport const updateDiluent = (index, diluent) => {\n    return dispatch => {\n        dispatch({ type: Types.SET_DILUENT, payload: { index: index, data: diluent } })\n    }\n}","import { Dispatch } from 'redux'\nimport Types from './types'\n\nexport const setTemperature = temperature => {\n    return dispatch => {\n        dispatch({ type: Types.SET_TEMPERATURE, payload: temperature })\n    }\n}\n\nexport const setPressure = pressure => {\n    return dispatch => {\n        dispatch({ type: Types.SET_PRESSURE, payload: pressure })\n    }\n}\n\nexport const setPhysicalState = physicalState => {\n    return dispatch => {\n        dispatch({ type: Types.SET_PHYSICAL_STATE, payload: physicalState })\n    }\n}\n\nexport const setHeatOfReaction = heatOfReaction => {\n    return dispatch => {\n        dispatch({ type: Types.SET_HEAT_OF_REACTION, payload: heatOfReaction })\n    }\n}\n\nexport const setCp = cp => {\n    return dispatch => {\n        dispatch({ type: Types.SET_CP, payload: cp })\n    }\n}","import axios from 'axios'\nimport server from '../../server'\nimport Types from './types'\n\n// cpMix will either be false or the value of cp mix in the operating params\nexport const calculate = operatingParams => {\n    return async (dispatch, getState) => {\n        const { reactants, products, diluents } = getState().compound\n        const hNums = getHNums(reactants, products, diluents)\n        dispatch({ type: Types.SET_HNUMS, payload: hNums })\n        try {\n            const promises = Object.keys(hNums).map(async name => {\n                const res = await axios.post(`${server}/graph`, Object.keys(hNums[`${name}`]))\n                const data = res.data\n                data['name'] = name\n                return data\n            })\n\n            const matrix = await Promise.all(promises)\n            dispatch({ type: Types.SET_MATRIX, payload: matrix })\n\n            // calculation block\n            const response = await axios.post(`${server}/calculate`, {\n                operatingParams: operatingParams,\n                reactants: reactants\n            })\n\n            dispatch({ type: Types.SET_REACTION_INFO, payload: response.data })\n        } catch (error) {\n            // Error 😨\n            const message = error.response ? error.response.data.error : error\n            alert(message)\n        }\n    }\n}\n\nconst getHNums = (reactants, products, diluents) => {\n    const hNums = {}\n    reactants.forEach(reactant => {\n        if (reactant.productName)\n            hNums[reactant.productName] = reactant.hNumbers\n    })\n\n    products.forEach(product => {\n        if (product.productName)\n            hNums[product.productName] = product.hNumbers\n    })\n\n    diluents.forEach(diluent => {\n        if (diluent.productName)\n            hNums[diluent.productName] = diluent.hNumbers\n    })\n\n    return hNums\n}\n\n\n\n","import * as compound from './Compound'\nimport * as operatingParams from './OperatingParams'\nimport * as report from './Report'\n\nexport default {\n    compound,\n    operatingParams,\n    report,\n}","import React, { Component } from 'react'\nimport { Label, Input, Button } from 'reactstrap'\n\nimport { connect } from 'react-redux'\nimport actions from '../redux/actions'\n\nconst Header = props => {\n\n    const handleChangeR = event => {\n        const numReactants = parseInt(event.target.value)\n        props.setNumReactants(numReactants)\n    }\n\n    const handleChangeP = event => {\n        const numProducts = parseInt(event.target.value)\n        props.setNumProducts(numProducts)\n    }\n\n    const handleChangeD = event => {\n        const numDiluents = parseInt(event.target.value)\n        props.setNumDiluents(numDiluents)\n    }\n\n    const handleChangeTemperature = event => {\n        props.setTemperature(event.target.value)\n    }\n\n    const handleChangePressure = event => {\n        props.setPressure(event.target.value)\n    }\n\n    const handleChangePhysicalState = event => {\n        props.setPhysicalState(event.target.value)\n    }\n\n    const handleChangeHeatOfReaction = event => {\n        props.setHeatOfReaction(event.target.value)\n    }\n\n    const handleChangeCp = event => {\n        props.setCp(event.target.value)\n    }\n\n    return (\n        <div className=\"Header\" style={styles.main}>\n            <div className=\"HeaderFlex\" style={styles.flexTop}>\n                <div className=\"TopWrapper\">\n                    <h1 style={{ paddingBottom: '.5em' }}>CISTAR Web Tool</h1>\n                    <div className=\"TitleLocation\" style={{ paddingLeft: '1em' }}>\n                        <div className=\"Title\" style={styles.titleLocation}>\n                            <h6 style={{ paddingRight: '1em' }}>Title: </h6>\n                            <Input type=\"text\" name=\"title\" />\n                        </div>\n                        <div className=\"Location\" style={styles.titleLocation}>\n                            <h6 style={{ paddingRight: '1em' }} >Location: </h6>\n                            <Input type=\"text\" name=\"title\" />\n                        </div>\n                        <Button color=\"primary\" onClick={() => alert('Save feature coming soon :)')}>Save Reaction</Button>\n                    </div>\n                </div>\n\n                <div className=\"OperatingParams\">\n                    <h4>Operating Parameters: </h4>\n                    <div className=\"Params\" style={styles.operatingParams}>\n                        <h6>Temperature (&deg;C)</h6>\n                        <Input type=\"text\" name=\"temperature\" defaultValue=\"0\" onChange={handleChangeTemperature} />\n                        <h6 style={{ paddingTop: '1em' }}>Pressure (bar)</h6>\n                        <Input type=\"text\" name=\"pressure\" defaultValue=\"1\" onChange={handleChangePressure} />\n                        <h6 style={{ paddingTop: '1em' }}>State</h6>\n                        <Input type=\"select\" name=\"st\" id=\"exampleSelect\" onChange={handleChangePhysicalState}>\n                            <option>Liquid</option>\n                            <option>Gas</option>\n                        </Input>\n                        <h6 style={{ paddingTop: '1em' }}>Heat of Reaction (cal / g)</h6>\n                        <Input type=\"text\" name=\"heatOfReaction\" onChange={handleChangeHeatOfReaction} />\n                        <h6 style={{ paddingTop: '1em', color: 'black' }}>Cp (mix) (cal/g/°C)</h6>\n                        <Input type=\"text\" name=\"cp\" onChange={handleChangeCp} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"ReactantsProductsDiluents\" style={styles.rpd}>\n                <span style={styles.rpd.element}>\n                    <Label for=\"Reactants\">Reactants</Label>\n                    <Input type=\"select\" name=\"Reactants\" id=\"Reactants\" onChange={handleChangeR}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                    </Input>\n                </span>\n\n                <span style={styles.rpd.element}>\n                    <Label for=\"Products\">Products</Label>\n                    <Input type=\"select\" name=\"Products\" id=\"Products\" onChange={handleChangeP}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                    </Input>\n                </span>\n\n                <span style={styles.rpd.element}>\n                    <Label for=\"Diluents\">Diluents</Label>\n                    <Input type=\"select\" name=\"Diluents\" id=\"Diluents\" onChange={handleChangeD}>\n                        <option>0</option>\n                        <option>1</option>\n                        <option>2</option>\n                    </Input>\n                </span>\n            </div>\n            <span style={{ color: '#c71e1e' }}>* Inputs in red are required user inputs *</span>\n        </div >\n\n    )\n}\n\nconst styles = {\n    main: {\n        backgroundColor: '#f1f1f1',\n        marginBottom: '2em',\n        padding: '1em 3em',\n    },\n\n    flexTop: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n\n    flexBottom: {\n\n    },\n\n    titleLocation: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: '1em'\n    },\n\n    operatingParams: {\n        color: '#c71e1e',\n        padding: '1em'\n    },\n\n    rpd: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        element: {\n            width: '33%',\n            padding: '1em'\n        },\n    }\n\n}\n\n// const mapStateToProps = state => {\n\n// }\n\nconst mapDispatchToProps = {\n    setNumReactants: actions.compound.setNumReactants,\n    setNumProducts: actions.compound.setNumProducts,\n    setNumDiluents: actions.compound.setNumDiluents,\n\n    setTemperature: actions.operatingParams.setTemperature,\n    setPressure: actions.operatingParams.setPressure,\n    setPhysicalState: actions.operatingParams.setPhysicalState,\n    setHeatOfReaction: actions.operatingParams.setHeatOfReaction,\n    setCp: actions.operatingParams.setCp,\n}\n\nexport default connect(null, mapDispatchToProps)(Header)","import React from 'react'\nimport { Input } from 'reactstrap'\n\nimport { connect } from 'react-redux'\nimport actions from '../redux/actions'\n\nconst Reactant = props => {\n\n    // when a file is uploaded, parse it\n    const handleFileSelect = e => {\n        if (!e.target.files[0]) return\n\n        const formData = new FormData()\n        formData.set('file', e.target.files[0], e.target.files[0].name)\n        props.parseReactantFile(props.index, props.temperature, formData)\n    }\n\n    const handleChange = e => {\n        const properties = { ...props.reactants[props.index] }\n        properties[e.target.name] = e.target.value\n        props.updateReactant(props.index, properties)\n    }\n\n    const { number, index } = props\n    const properties = props.reactants[index]\n    return (\n        <div className=\"Reactant\" style={{ ...styles }}>\n            <h4 sm=\"4\">Reactant {number}</h4>\n\n            <Input\n                type=\"file\"\n                name=\"file\"\n                encType=\"multipart/form-data\"\n                onChange={handleFileSelect}\n            />\n            <Input type=\"text\" name=\"productName\" value={properties.productName || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWtFraction\" value={properties.molWtFraction || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWt\" value={properties.molWt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"casNo\" value={properties.casNo || ''} onChange={handleChange} />\n            <br />\n\n            <Input type=\"text\" name=\"ph\" value={properties.ph || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"boilingPt\" value={properties.boilingPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"flashPt\" value={properties.flashPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"upperExplosionLim\" value={properties.upperExplosionLim || ''} onChange={handleChange} /> {/* upper explosion limit */}\n            <Input type=\"text\" name=\"lowerExplosionLim\" value={properties.lowerExplosionLim || ''} onChange={handleChange} /> {/* lower explosion limit  */}\n            <Input type=\"text\" name=\"vapourPressure\" value={properties.vapourPressure || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"vapourDensity\" value={properties.vapourDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"relDensity\" value={properties.relDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"autoIgnitionTemp\" value={properties.autoIgnitionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"decompositionTemp\" value={properties.decompositionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"viscosity\" value={properties.viscosity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"thermalConductivity\" value={properties.viscosity || ''} onChange={handleChange} /> {/* Thermal conductivity */}\n            <Input type=\"text\" name=\"cp\" value={properties.cp || ''} onChange={handleChange} /> {/* CP */}\n        </div>\n    )\n\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(6, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    textAlign: 'center',\n    alignItems: 'start',\n    backgroundColor: '#f1f1f1'\n}\n\nconst mapStateToProps = state => ({\n    temperature: state.operatingParams.temperature,\n    reactants: state.compound.reactants,\n})\n\nconst mapDispatchToProps = {\n    parseReactantFile: actions.compound.parseReactantFile,\n    updateReactant: actions.compound.updateReactant,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reactant)","import React from 'react'\nimport { Input } from 'reactstrap'\n\nimport { connect } from 'react-redux'\nimport actions from '../redux/actions'\n\nconst Product = props => {\n\n    // when a file is uploaded, parse it\n    const handleFileSelect = e => {\n        if (!e.target.files[0]) return\n\n        const formData = new FormData()\n        formData.set('file', e.target.files[0], e.target.files[0].name)\n        props.parseProductFile(props.index, formData)\n    }\n\n    const handleChange = e => {\n        const properties = { ...props.products[props.index] }\n        properties[e.target.name] = e.target.value\n        props.updateProduct(props.index, properties)\n    }\n\n    const { number, index } = props\n    const properties = props.products[index]\n    return (\n        <div className=\"Product\" style={{ ...styles }}>\n            <h4 sm=\"4\">Product {number}</h4>\n\n            <Input\n                type=\"file\"\n                name=\"file\"\n                encType=\"multipart/form-data\"\n                onChange={handleFileSelect}\n            />\n            <Input type=\"text\" name=\"productName\" value={properties.productName || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWtFraction\" value={properties.molWtFraction || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWt\" value={properties.molWt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"casNo\" value={properties.casNo || ''} onChange={handleChange} />\n            <br />\n\n            <Input type=\"text\" name=\"ph\" value={properties.ph || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"boilingPt\" value={properties.boilingPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"flashPt\" value={properties.flashPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"upperExplosionLim\" value={properties.upperExplosionLim || ''} onChange={handleChange} /> {/* upper explosion limit */}\n            <Input type=\"text\" name=\"lowerExplosionLim\" value={properties.lowerExplosionLim || ''} onChange={handleChange} /> {/* lower explosion limit  */}\n            <Input type=\"text\" name=\"vapourPressure\" value={properties.vapourPressure || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"vapourDensity\" value={properties.vapourDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"relDensity\" value={properties.relDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"autoIgnitionTemp\" value={properties.autoIgnitionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"decompositionTemp\" value={properties.decompositionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"viscosity\" value={properties.viscosity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"thermalConductivity\" value={properties.viscosity || ''} onChange={handleChange} /> {/* Thermal conductivity */}\n            <Input type=\"text\" name=\"cp\" value={properties.cp || ''} onChange={handleChange} /> {/* CP */}\n        </div>\n    )\n\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(6, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    textAlign: 'center',\n    alignItems: 'start',\n    backgroundColor: '#f1f1f1'\n}\n\nconst mapStateToProps = state => ({\n    temperature: state.operatingParams.temperature,\n    products: state.compound.products,\n})\n\nconst mapDispatchToProps = {\n    parseProductFile: actions.compound.parseProductFile,\n    updateProduct: actions.compound.updateProduct,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product)","import React from 'react'\n\nimport actions from '../redux/actions'\nimport { connect } from 'react-redux'\n\nconst Properties = ({ numReactants, numProducts, numDiluents }) => {\n    const numberOfElements = numReactants + numProducts + numDiluents\n    const alignment = numberOfElements > 6 ? 'start' : 'center'\n    return (\n        <div className=\"Properties\" style={{ ...styles.main, alignItems: alignment }}>\n\n            <h2 style={{ alignSelf: 'end' }}>Property</h2>\n            <div></div>\n            <h6>Product Name</h6>\n            <h6 style={{ color: '#c71e1e' }}> Initial Weight Fraction</h6>\n            <h6>Mol. Weight (g/mol)</h6>\n            <h6>CAS-No.</h6>\n\n            <h5>Physical and Chemical Properties</h5>\n            <h6>pH at 20°C (g/l)</h6>\n            <h6>Initial boiling point (°C)</h6>\n            <h6>Flash point (°C)</h6>\n            <h6>Upper explosion limit (% V)</h6>\n            <h6>Lower explosion limit (% V)</h6>\n            <h6>Vapour pressure at 20°C (hPa)</h6>\n            <h6>Vapour density (Air = 1.0)</h6>\n            <h6>Relative density at 25°C (g/cm3)</h6>\n            <h6>Auto ignition temperature (°C)</h6>\n            <h6>Decomposition temperature (°C)</h6>\n            <h6>Viscosity ()</h6>\n            <h6>Thermal Conductivity - k</h6>\n            <h6 style={{ color: '#c71e1e' }}>Specific heat capacity - Cp (cal/g/°C)</h6>\n        </div>\n\n    )\n}\n\nconst styles = {\n    main: {\n        display: 'grid',\n        gridTemplateRows: 'repeat(6, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n        margin: '0',\n        textAlign: 'center',\n    },\n}\n\nconst mapStateToProps = state => ({\n    numReactants: state.compound.numReactants,\n    numProducts: state.compound.numProducts,\n    numDiluents: state.compound.numDiluents,\n})\n\nexport default connect(mapStateToProps)(Properties)","import React from 'react'\nimport { Input } from 'reactstrap'\n\nimport { connect } from 'react-redux'\nimport actions from '../redux/actions'\n\nconst Diluent = props => {\n\n    // when a file is uploaded, parse it\n    const handleFileSelect = e => {\n        if (!e.target.files[0]) return\n\n        const formData = new FormData()\n        formData.set('file', e.target.files[0], e.target.files[0].name)\n        props.parseDiluentFile(props.index, formData)\n    }\n\n    const handleChange = e => {\n        const properties = { ...props.diluents[props.index] }\n        properties[e.target.name] = e.target.value\n        props.updateDiluent(props.index, properties)\n    }\n\n    const { number, index } = props\n    const properties = props.diluents[index]\n    return (\n        <div className=\"Diluent\" style={{ ...styles }}>\n            <h4 sm=\"4\">Diluent {number}</h4>\n\n            <Input\n                type=\"file\"\n                name=\"file\"\n                encType=\"multipart/form-data\"\n                onChange={handleFileSelect}\n            />\n            <Input type=\"text\" name=\"productName\" value={properties.productName || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWtFraction\" value={properties.molWtFraction || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"molWt\" value={properties.molWt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"casNo\" value={properties.casNo || ''} onChange={handleChange} />\n            <br />\n\n            <Input type=\"text\" name=\"ph\" value={properties.ph || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"boilingPt\" value={properties.boilingPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"flashPt\" value={properties.flashPt || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"upperExplosionLim\" value={properties.upperExplosionLim || ''} onChange={handleChange} /> {/* upper explosion limit */}\n            <Input type=\"text\" name=\"lowerExplosionLim\" value={properties.lowerExplosionLim || ''} onChange={handleChange} /> {/* lower explosion limit  */}\n            <Input type=\"text\" name=\"vapourPressure\" value={properties.vapourPressure || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"vapourDensity\" value={properties.vapourDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"relDensity\" value={properties.relDensity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"autoIgnitionTemp\" value={properties.autoIgnitionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"decompositionTemp\" value={properties.decompositionTemp || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"viscosity\" value={properties.viscosity || ''} onChange={handleChange} />\n            <Input type=\"text\" name=\"thermalConductivity\" value={properties.viscosity || ''} onChange={handleChange} /> {/* Thermal conductivity */}\n            <Input type=\"text\" name=\"cp\" value={properties.cp || ''} onChange={handleChange} /> {/* CP */}\n        </div>\n    )\n\n}\n\nconst styles = {\n    display: 'grid',\n    gridTemplateRows: 'repeat(6, 1fr) 1fr repeat(13, minmax(auto, 1fr))',\n    textAlign: 'center',\n    alignItems: 'start',\n    backgroundColor: '#f1f1f1'\n}\n\nconst mapStateToProps = state => ({\n    temperature: state.operatingParams.temperature,\n    diluents: state.compound.diluents,\n})\n\nconst mapDispatchToProps = {\n    parseDiluentFile: actions.compound.parseDiluentFile,\n    updateDiluent: actions.compound.updateDiluent,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Diluent)","import React from 'react'\nimport { Button } from 'reactstrap'\nimport actions from '../redux/actions'\nimport { connect } from 'react-redux'\n\nimport Reactant from './Reactant'\nimport Product from './Product'\nimport Properties from './Properties'\nimport Diluent from './Diluent'\n\nconst Body = props => {\n\n    // validate data\n    const handleClick = () => {\n        try {\n            validateOperatingParams(props.operatingParams)\n            // check if we have are using a global cp or cp/reactant\n            const cpMix = props.operatingParams.cp !== '' ? true : false\n            if (!cpMix)\n                validateReactants(props.reactants)\n\n            props.calculate(props.operatingParams)\n\n        } catch (error) {\n            alert(error)\n        }\n    }\n\n    const validateOperatingParams = operatingParams => {\n        // temperature\n        if (!operatingParams.temperature)\n            throw new Error(\"Please enter a temperature\")\n\n        if (isNaN(Number(operatingParams.temperature)))\n            throw new Error(\"Please enter a valid temperature\")\n\n        // pressure\n        if (!operatingParams.pressure)\n            throw new Error(\"Please enter a pressure\")\n\n        if (isNaN(Number(operatingParams.pressure)) || Number(operatingParams.pressure) < 0)\n            throw new Error(\"Please enter a valid pressure\")\n\n        // heat of reaction\n        if (!operatingParams.heatOfReaction)\n            throw new Error(\"Please enter a heat of reaction\")\n\n        if (isNaN(Number(operatingParams.temperature)))\n            throw new Error(\"Please enter a valid heat of reaction\")\n    }\n\n    const validateReactants = reactants => {\n        const fractions = []\n        reactants.forEach((reactant, i) => {\n            const { cp, molWtFraction } = reactant\n            const number = i + 1\n\n            // cp validation\n            if (cp === '') throw new Error('Please enter a valid cp for reactant ' + number)\n            if (isNaN(Number(cp)) || Number(cp) < 0)\n                throw new Error('Please enter a valid cp for reactant ' + number)\n\n            // initial weight fraction validation\n            if (isNaN(Number(molWtFraction)) || Number(molWtFraction) < 0)\n                throw new Error('Please enter a valid weight fraction for reactant ' + number)\n\n            fractions.push(Number(molWtFraction))\n        })\n\n        // validate that weight fractions add to 1\n        const sum = fractions.reduce((a, b) => a + b, 0)\n        if (sum !== 1)\n            throw new Error('Please make sure weight fractions add to 1')\n    }\n\n    const { numReactants, numProducts, numDiluents } = props\n    return (\n        <div className=\"Body\">\n            <div style={style}>\n                <Properties />\n                {/* this is just a hacky way to map numReactants number of times: */}\n                {\n                    [...Array(numReactants)].map((e, i) => (\n                        <Reactant\n                            key={i}\n                            index={i}\n                            number={i + 1}\n                        />\n                    ))\n                }\n                {\n                    [...Array(numProducts)].map((e, i) => (\n                        <Product\n                            key={i}\n                            index={i}\n                            number={i + 1}\n                        />\n                    ))\n                }\n                {\n                    [...Array(numDiluents)].map((e, i) => (\n                        <Diluent\n                            key={i}\n                            index={i}\n                            number={i + 1}\n                        />\n                    ))\n                }\n            </div>\n            <div style={style}>\n                <Button\n                    color=\"primary\"\n                    onClick={handleClick}\n                >\n                    Calculate\n                </Button>\n            </div>\n        </div>\n\n    )\n\n}\n\nconst style = {\n    display: 'flex',\n    justifyContent: 'center',\n}\n\nconst mapStateToProps = state => ({\n    numReactants: state.compound.numReactants,\n    numProducts: state.compound.numProducts,\n    numDiluents: state.compound.numDiluents,\n\n    reactants: state.compound.reactants,\n    operatingParams: state.operatingParams,\n})\n\nconst mapDispatchToProps = {\n    calculate: actions.report.calculate,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body)","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nconst styles = {\n    main: {\n        padding: '1rem',\n        width: '100vw',\n    },\n\n    table: {\n        borderSpacing: '0',\n        border: '1px solid black',\n        align: 'center'\n    },\n\n    th: {\n        margin: '0',\n        padding: '0.5rem',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n        lineHeight: '1.5',\n    },\n\n    td: {\n        margin: '0',\n        padding: '0.5rem',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black'\n    },\n\n    caption: {\n        captionSide: 'top',\n        color: 'black'\n    }\n}\n\nconst Matrix = ({ matrix }) => {\n    const columns = [\n        'Name',\n        'Flammability',\n        'Reactivity',\n        'Skin absorption',\n        'Skin contact',\n        'Eye contact',\n        'Respiratory',\n        'Carcinogen',\n        'Reproductive hazard',\n        'Sensitizer',\n        'Other',\n        'Ingestion',\n    ]\n\n    return (\n        <div className='Matrix' style={styles.main}>\n            <table align='center' style={styles.table}>\n                <caption style={styles.caption}>Hazard Matrix</caption>\n                <thead>\n                    <tr>\n                        {columns.map((column, i) => (\n                            <th style={styles.th} key={i}>{column}</th>\n                        ))}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {matrix.map((row, i) => (\n                        <tr key={i}>\n                            <td style={{ ...styles.th, }}>{row.name}</td>\n                            <td style={{ ...styles.th, color: row.flammability, backgroundColor: row.flammability }}>{row.flammability}</td>\n                            <td style={{ ...styles.th, color: row.reactivity, backgroundColor: row.reactivity }}>{row.reactivity}</td>\n                            <td style={{ ...styles.th, color: row.skinAbsorption, backgroundColor: row.skinAbsorption }}>{row.skinAbsorption}</td>\n                            <td style={{ ...styles.th, color: row.skinContact, backgroundColor: row.skinContact }}>{row.skinContact}</td>\n                            <td style={{ ...styles.th, color: row.eyeContact, backgroundColor: row.eyeContact }}>{row.eyeContact}</td>\n                            <td style={{ ...styles.th, color: row.respiratory, backgroundColor: row.respiratory }}>{row.respiratory}</td>\n                            <td style={{ ...styles.th, color: row.carcinogen, backgroundColor: row.carcinogen }}>{row.carcinogen}</td>\n                            <td style={{ ...styles.th, color: row.reproductiveHazard, backgroundColor: row.reproductiveHazard }}>{row.reproductiveHazard}</td>\n                            <td style={{ ...styles.th, color: row.sensitizer, backgroundColor: row.sensitizer }}>{row.sensitizer}</td>\n                            <td style={{ ...styles.th, color: row.other, backgroundColor: row.other }}>{row.other}</td>\n                            <td style={{ ...styles.th, color: row.ingestion, backgroundColor: row.ingestion }}>{row.ingestion}</td>\n                        </tr>\n\n                    ))}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    matrix: state.report.matrix,\n})\n\nexport default connect(mapStateToProps)(Matrix)","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nconst styles = {\n    main: {\n        padding: '1rem',\n        width: '100vw',\n    },\n\n    table: {\n        borderCollapse: 'separate',\n        borderSpacing: '0px',\n        border: '1px solid black',\n        align: 'center'\n    },\n\n    th: {\n        margin: '0',\n        padding: '0.5rem',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n        lineHeight: '1.5',\n    },\n\n    td: {\n        margin: '0',\n        padding: '0.5rem',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black'\n    },\n\n    caption: {\n        captionSide: 'top',\n        color: 'black'\n    }\n}\n\nconst HTable = ({ hNums }) => {\n    const columns = [\n        'Name',\n        'H-Number',\n        'H-Statement',\n    ]\n\n    return (\n        <div className='HTable' style={styles.main}>\n            <table align='center' style={styles.table}>\n                <caption style={styles.caption}>Hazard Statements</caption>\n                <thead>\n                    <tr>\n                        {columns.map((column, i) => (\n                            <th style={styles.th} key={i}>{column}</th>\n                        ))}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {Object.keys(hNums).map((row, i) => (\n                        <tr key={i}>\n                            <td style={styles.td}>{row}</td>\n\n                            <td style={styles.td}>\n                                <div style={{display: 'flex', flexDirection: 'column' }}>\n                                    {Object.keys(hNums[row]).map((hNum, j) => (\n                                        <span key={j}>{hNum}</span>\n                                    ))}\n                                </div>     \n                            </td>\n\n                            <td style={styles.td}>\n                                <div style={{display: 'flex', flexDirection: 'column' }}>\n                                    {Object.values(hNums[row]).map((hNum, j) => (\n                                        <span key={j}>{hNum}</span>\n                                    ))}\n                                </div>     \n                            </td>\n                            {/* <td>\n                                <table>\n                                    <tbody style={{ align: 'center' }}>\n                                        {Object.keys(hNums[row]).map((hNum, j) => (\n                                            <tr key={j}><td>{hNum}</td></tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </td>\n                \n                            <td style={styles.td}>\n                                <table>\n                                    <tbody>\n                                        {Object.values(hNums[row]).map((hNum, j) => (\n                                            <tr key={j}><td>{hNum}</td></tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </td> */}\n                        </tr>\n\n                    ))}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    hNums: state.report.hNums,\n})\n\nexport default connect(mapStateToProps)(HTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst styles = {\n    main: {\n        padding: '1rem',\n        paddingTop: '2rem',\n        width: '100vw',\n        textAlign: 'center',\n    },\n}\n\nconst Calculation = ({ reactionInfo }) => {\n    return (\n        <div className='Calculation' style={styles.main}>\n            <h4>Calculation</h4>\n            <span>Adiabatic temperature change: {Number(reactionInfo.adiabaticTemp).toFixed(3)} °C</span> <br/>\n            <span>Calculated final temperature: {Number(reactionInfo.finalTemp).toFixed(3)} °C</span> <br/>\n            <span>Calculated final pressure: {Number(reactionInfo.adiabaticPressure).toFixed(3)} bar</span>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    reactionInfo: state.report.reactionInfo,\n})\n\nexport default connect(mapStateToProps)(Calculation)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Matrix from './Matrix'\nimport HTable from './HTable'\nimport Calculation from './Calculation'\n\nconst styles = {\n    main: {\n        padding: '1rem',\n        paddingTop: '2rem',\n        width: '100vw',\n        textAlign: 'center',\n    },\n}\n\nconst Report = props => {\n    // if report has not been submitted yet return\n    if (props.matrix.length === 0) return null;\n\n    return (\n        <div className='Report' style={styles.main}>\n            <h2>Report</h2>\n            <Calculation />\n            <HTable />\n            <Matrix />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    matrix: state.report.matrix,\n})\n\nexport default connect(mapStateToProps)(Report)","import React, { Component } from 'react'\nimport actions from './redux/actions'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport server from './server'\n\nimport Header from './header/Header'\nimport Body from './body/Body'\nimport Report from './report/Report'\n\nclass Main extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            hNums: {},\n            matrix: [],\n        }\n    }\n\n    setHNums = (name, hNum) => {\n        const { hNums } = this.state\n        hNums[`${name}`] = hNum\n        this.setState({ hNums })\n    }\n\n    calculate = async reactants => {\n        const { hNums } = this.state\n        try {\n            this.validateReactants(reactants)\n        } catch (error) {\n            const message = error.response ? error.response.data.error : error\n            alert(message)\n            return\n        }\n\n        const promises = Object.keys(hNums).map(async name => {\n            const res = await axios.post(`${server}/graph`, Object.keys(hNums[`${name}`]))\n            const data = res.data\n            data['name'] = name\n            return data\n        })\n\n        const matrix = await Promise.all(promises)\n\n        this.setState({ matrix })\n    }\n\n    // validate the initial weight fraction and cp for reactants\n    validateReactants = reactants => {\n        for (let i = 1; i <= this.state.numReactants; i++) {\n            console.log('before')\n            const reactant = reactants[i]\n            console.log('after')\n            if (! reactant) throw new Error('Please enter data for reactant ' + i)\n            console.log(reactant)\n            // cp validation\n            const cp = reactant['cp']\n            if (cp === '') throw new Error('Please enter a valid cp for reactant ' + i)\n            if (isNaN(Number(cp)) || Number(cp) < 0)\n                throw new Error('Please enter a valid cp for reactant ' + i)\n\n            // initial weight fraction validation\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Main\">\n                <Header />\n                <Body\n                    operatingParams={this.state.operatingParams}\n                    setHNums={this.setHNums}\n                    calculate={this.calculate}\n                />\n                <Report />\n            </div>\n        )\n    }\n}\n\nexport default Main","import React from 'react'\n\nimport Main from './Main'\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Main />\n        </div> \n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Reducer for the compounds: reactants, products, diluents\nimport Types from '../actions/types'\nimport produce from 'immer'\n\nconst initialState = {\n    numReactants: 1,\n    numProducts: 1,\n    numDiluents: 0,\n\n    reactants: [{}],\n    products: [{}],\n    diluents: [],\n}\n\nexport default (state = initialState, action) => produce(state, draft => {\n\n    let diff // difference between old array size and new size\n    switch (action.type) {\n        case (Types.SET_NUM_REACTANTS):\n            const numReactants = action.payload\n            draft.numReactants = numReactants\n\n            // update the contents of reactants array\n            diff = numReactants - draft.reactants.length\n            // if we are adding reactants, push on empty object\n            if (diff >= 0) {\n                for (let i = 0; i < diff; i++)\n                    draft.reactants.push({})\n            } else { // otherwise, pop them off\n                for (let i = 0; i > diff; i--)\n                    draft.reactants.pop()\n            }\n\n            return\n\n\n        case (Types.SET_NUM_PRODUCTS):\n            const numProducts = action.payload\n            draft.numProducts = numProducts\n\n            // update the contents of products array\n            diff = numProducts - draft.products.length\n            // if we are adding products, push on empty object\n            if (diff >= 0) {\n                for (let i = 0; i < diff; i++)\n                    draft.products.push({})\n            } else { // otherwise, pop them off\n                for (let i = 0; i > diff; i--)\n                    draft.products.pop()\n            }\n\n            return\n\n        case (Types.SET_NUM_DILUENTS):\n            const numDiluents = action.payload\n            draft.numDiluents = numDiluents\n\n            // update the contents of diluents array\n            diff = numDiluents - draft.diluents.length\n            // if we are adding diluents, push on empty object\n            if (diff >= 0) {\n                for (let i = 0; i < diff; i++)\n                    draft.diluents.push({})\n            } else { // otherwise, pop them off\n                for (let i = 0; i > diff; i--)\n                    draft.diluents.pop()\n            }\n\n            return\n\n        case (Types.SET_REACTANT):\n            draft.reactants[action.payload.index] = action.payload.data\n            return\n\n        case (Types.SET_PRODUCT):\n            draft.products[action.payload.index] = action.payload.data\n            return\n\n        case (Types.SET_DILUENT):\n            draft.diluents[action.payload.index] = action.payload.data\n            return\n\n        default:\n            return\n    }\n})\n","// Reducer for the operating parameters: temperature, pressure, state, heat of reaction, and cp of mixture\nimport Types from '../actions/types'\n\nconst initialState = {\n    temperature: '0',\n    pressure: '1',\n    physicalState: 'Liquid',\n    heatOfReaction: '',\n    cp: '',\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case (Types.SET_TEMPERATURE):\n            return {\n                ...state,\n                temperature: action.payload,\n            }\n\n        case (Types.SET_PRESSURE):\n            return {\n                ...state,\n                pressure: action.payload,\n            }\n\n        case (Types.SET_PHYSICAL_STATE):\n            return {\n                ...state,\n                physicalState: action.payload,\n            }\n\n        case (Types.SET_HEAT_OF_REACTION):\n            return {\n                ...state,\n                heatOfReaction: action.payload,\n            }\n\n        case (Types.SET_CP):\n            return {\n                ...state,\n                cp: action.payload,\n            }\n\n\n        default:\n            return state\n    }\n}\n","// Reducer for the report: general calculations, hazard statement table, hazard matrix\nimport Types from '../actions/types'\nimport produce from 'immer'\n\nconst initialState = {\n    matrix: [],\n    hNums: {},\n    reactionInfo: {\n        adiabaticTemp: '',\n        finalTemp: '',\n        adiabaticPressure: ''\n    },\n}\n\nexport default (state = initialState, action) => produce(state, draft => {\n    switch (action.type) {\n        case (Types.SET_HNUMS):\n            draft.hNums = action.payload\n            return\n\n        case (Types.SET_MATRIX):\n            draft.matrix = action.payload\n            return\n\n        case (Types.SET_REACTION_INFO):\n            draft.reactionInfo = action.payload\n            return\n\n        default:\n            return\n    }\n})\n","import { combineReducers } from 'redux'\n\nimport CompoundReducer from './CompoundReducer'\nimport OperatingParamsReducer from './OperatingParamsReducer'\nimport ReportReducer from './ReportReducer'\n\nconst rootReducer = () => combineReducers({\n    compound: CompoundReducer,\n    operatingParams: OperatingParamsReducer,\n    report: ReportReducer,\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer(), composeEnhancers(applyMiddleware(thunk)))\n\nconst Entrypoint = () => {\n    return (\n        <Provider store={store}>\n            <App />\n        </Provider>\n    )\n}\n\nReactDOM.render(<Entrypoint />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}